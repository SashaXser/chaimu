var X={version:"1.0.1",debug:!1,fetchFn:fetch.bind(window)};class R{constructor(){this._vector=new Float32Array,this._position=0,this._frameCount=0}get vector(){return this._vector}get position(){return this._position}get startIndex(){return this._position*2}get frameCount(){return this._frameCount}get endIndex(){return(this._position+this._frameCount)*2}clear(){this.receive(this._frameCount),this.rewind()}put(y){this._frameCount+=y}putSamples(y,H,V=0){H=H||0;let $=H*2;if(!(V>=0))V=(y.length-$)/2;let G=V*2;this.ensureCapacity(V+this._frameCount);let J=this.endIndex;this.vector.set(y.subarray($,$+G),J),this._frameCount+=V}putBuffer(y,H,V=0){if(H=H||0,!(V>=0))V=y.frameCount-H;this.putSamples(y.vector,y.position+H,V)}receive(y){if(!(y>=0)||y>this._frameCount)y=this.frameCount;this._frameCount-=y,this._position+=y}receiveSamples(y,H=0){let V=H*2,$=this.startIndex;y.set(this._vector.subarray($,$+V)),this.receive(H)}extract(y,H=0,V=0){let $=this.startIndex+H*2,G=V*2;y.set(this._vector.subarray($,$+G))}ensureCapacity(y=0){let H=parseInt(y*2);if(this._vector.length<H){let V=new Float32Array(H);V.set(this._vector.subarray(this.startIndex,this.endIndex)),this._vector=V,this._position=0}else this.rewind()}ensureAdditionalCapacity(y=0){this.ensureCapacity(this._frameCount+y)}rewind(){if(this._position>0)this._vector.set(this._vector.subarray(this.startIndex,this.endIndex)),this._position=0}}class I{constructor(y){if(y)this._inputBuffer=new R,this._outputBuffer=new R;else this._inputBuffer=this._outputBuffer=null}get inputBuffer(){return this._inputBuffer}set inputBuffer(y){this._inputBuffer=y}get outputBuffer(){return this._outputBuffer}set outputBuffer(y){this._outputBuffer=y}clear(){this._inputBuffer.clear(),this._outputBuffer.clear()}}class Q extends I{constructor(y){super(y);this.reset(),this._rate=1}set rate(y){this._rate=y}reset(){this.slopeCount=0,this.prevSampleL=0,this.prevSampleR=0}clone(){let y=new Q;return y.rate=this._rate,y}process(){let y=this._inputBuffer.frameCount;this._outputBuffer.ensureAdditionalCapacity(y/this._rate+1);let H=this.transpose(y);this._inputBuffer.receive(),this._outputBuffer.put(H)}transpose(y=0){if(y===0)return 0;let H=this._inputBuffer.vector,V=this._inputBuffer.startIndex,$=this._outputBuffer.vector,G=this._outputBuffer.endIndex,J=0,Y=0;while(this.slopeCount<1)$[G+2*Y]=(1-this.slopeCount)*this.prevSampleL+this.slopeCount*H[V],$[G+2*Y+1]=(1-this.slopeCount)*this.prevSampleR+this.slopeCount*H[V+1],Y=Y+1,this.slopeCount+=this._rate;if(this.slopeCount-=1,y!==1)y:while(!0){while(this.slopeCount>1)if(this.slopeCount-=1,J=J+1,J>=y-1)break y;let j=V+2*J;$[G+2*Y]=(1-this.slopeCount)*H[j]+this.slopeCount*H[j+2],$[G+2*Y+1]=(1-this.slopeCount)*H[j+1]+this.slopeCount*H[j+3],Y=Y+1,this.slopeCount+=this._rate}return this.prevSampleL=H[V+2*y-2],this.prevSampleR=H[V+2*y-1],Y}}class _{constructor(y){this._pipe=y}get pipe(){return this._pipe}get inputBuffer(){return this._pipe.inputBuffer}get outputBuffer(){return this._pipe.outputBuffer}fillInputBuffer(){throw new Error("fillInputBuffer() not overridden")}fillOutputBuffer(y=0){while(this.outputBuffer.frameCount<y){let H=16384-this.inputBuffer.frameCount;if(this.fillInputBuffer(H),this.inputBuffer.frameCount<16384)break;this._pipe.process()}}clear(){this._pipe.clear()}}var w=function(){return};class d extends _{constructor(y,H,V=w){super(H);this.callback=V,this.sourceSound=y,this.historyBufferSize=22050,this._sourcePosition=0,this.outputBufferPosition=0,this._position=0}get position(){return this._position}set position(y){if(y>this._position)throw new RangeError("New position may not be greater than current position");let H=this.outputBufferPosition-(this._position-y);if(H<0)throw new RangeError("New position falls outside of history buffer");this.outputBufferPosition=H,this._position=y}get sourcePosition(){return this._sourcePosition}set sourcePosition(y){this.clear(),this._sourcePosition=y}onEnd(){this.callback()}fillInputBuffer(y=0){let H=new Float32Array(y*2),V=this.sourceSound.extract(H,y,this._sourcePosition);this._sourcePosition+=V,this.inputBuffer.putSamples(H,0,V)}extract(y,H=0){this.fillOutputBuffer(this.outputBufferPosition+H);let V=Math.min(H,this.outputBuffer.frameCount-this.outputBufferPosition);this.outputBuffer.extract(y,this.outputBufferPosition,V);let $=this.outputBufferPosition+V;return this.outputBufferPosition=Math.min(this.historyBufferSize,$),this.outputBuffer.receive(Math.max($-this.historyBufferSize,0)),this._position+=V,V}handleSampleData(y){this.extract(y.data,4096)}clear(){super.clear(),this.outputBufferPosition=0}}var l=0,p=l,c=0,f=c,a=8,U=[[124,186,248,310,372,434,496,558,620,682,744,806,868,930,992,1054,1116,1178,1240,1302,1364,1426,1488,0],[-100,-75,-50,-25,25,50,75,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-20,-15,-10,-5,5,10,15,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-4,-3,-2,-1,1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],L=0.5,T=2,W=125,b=50,v=(b-W)/(T-L),u=W-v*L,g=25,E=15,O=(E-g)/(T-L),m=g-O*L;class N extends I{constructor(y){super(y);this._quickSeek=!0,this.midBufferDirty=!1,this.midBuffer=null,this.overlapLength=0,this.autoSeqSetting=!0,this.autoSeekSetting=!0,this._tempo=1,this.setParameters(44100,p,f,a)}clear(){super.clear(),this.clearMidBuffer()}clearMidBuffer(){if(this.midBufferDirty)this.midBufferDirty=!1,this.midBuffer=null}setParameters(y,H,V,$){if(y>0)this.sampleRate=y;if($>0)this.overlapMs=$;if(H>0)this.sequenceMs=H,this.autoSeqSetting=!1;else this.autoSeqSetting=!0;if(V>0)this.seekWindowMs=V,this.autoSeekSetting=!1;else this.autoSeekSetting=!0;this.calculateSequenceParameters(),this.calculateOverlapLength(this.overlapMs),this.tempo=this._tempo}set tempo(y){let H;this._tempo=y,this.calculateSequenceParameters(),this.nominalSkip=this._tempo*(this.seekWindowLength-this.overlapLength),this.skipFract=0,H=Math.floor(this.nominalSkip+0.5),this.sampleReq=Math.max(H+this.overlapLength,this.seekWindowLength)+this.seekLength}get tempo(){return this._tempo}get inputChunkSize(){return this.sampleReq}get outputChunkSize(){return this.overlapLength+Math.max(0,this.seekWindowLength-2*this.overlapLength)}calculateOverlapLength(y=0){let H;H=this.sampleRate*y/1000,H=H<16?16:H,H-=H%8,this.overlapLength=H,this.refMidBuffer=new Float32Array(this.overlapLength*2),this.midBuffer=new Float32Array(this.overlapLength*2)}checkLimits(y,H,V){return y<H?H:y>V?V:y}calculateSequenceParameters(){let y,H;if(this.autoSeqSetting)y=u+v*this._tempo,y=this.checkLimits(y,b,W),this.sequenceMs=Math.floor(y+0.5);if(this.autoSeekSetting)H=m+O*this._tempo,H=this.checkLimits(H,E,g),this.seekWindowMs=Math.floor(H+0.5);this.seekWindowLength=Math.floor(this.sampleRate*this.sequenceMs/1000),this.seekLength=Math.floor(this.sampleRate*this.seekWindowMs/1000)}set quickSeek(y){this._quickSeek=y}clone(){let y=new N;return y.tempo=this._tempo,y.setParameters(this.sampleRate,this.sequenceMs,this.seekWindowMs,this.overlapMs),y}seekBestOverlapPosition(){return this._quickSeek?this.seekBestOverlapPositionStereoQuick():this.seekBestOverlapPositionStereo()}seekBestOverlapPositionStereo(){let y,H,V,$=0;this.preCalculateCorrelationReferenceStereo(),y=0,H=Number.MIN_VALUE;for(;$<this.seekLength;$=$+1)if(V=this.calculateCrossCorrelationStereo(2*$,this.refMidBuffer),V>H)H=V,y=$;return y}seekBestOverlapPositionStereoQuick(){let y,H,V,$=0,G,J;this.preCalculateCorrelationReferenceStereo(),H=Number.MIN_VALUE,y=0,G=0,J=0;for(;$<4;$=$+1){let Y=0;while(U[$][Y]){if(J=G+U[$][Y],J>=this.seekLength)break;if(V=this.calculateCrossCorrelationStereo(2*J,this.refMidBuffer),V>H)H=V,y=J;Y=Y+1}G=y}return y}preCalculateCorrelationReferenceStereo(){let y=0,H,V;for(;y<this.overlapLength;y=y+1)V=y*(this.overlapLength-y),H=y*2,this.refMidBuffer[H]=this.midBuffer[H]*V,this.refMidBuffer[H+1]=this.midBuffer[H+1]*V}calculateCrossCorrelationStereo(y,H){let V=this._inputBuffer.vector;y+=this._inputBuffer.startIndex;let $=0,G=2,J=2*this.overlapLength,Y;for(;G<J;G=G+2)Y=G+y,$+=V[Y]*H[G]+V[Y+1]*H[G+1];return $}overlap(y){this.overlapStereo(2*y)}overlapStereo(y){let H=this._inputBuffer.vector;y+=this._inputBuffer.startIndex;let V=this._outputBuffer.vector,$=this._outputBuffer.endIndex,G=0,J,Y,j=1/this.overlapLength,C,q,D;for(;G<this.overlapLength;G=G+1)Y=(this.overlapLength-G)*j,C=G*j,J=2*G,q=J+y,D=J+$,V[D+0]=H[q+0]*C+this.midBuffer[J+0]*Y,V[D+1]=H[q+1]*C+this.midBuffer[J+1]*Y}process(){let y,H,V;if(this.midBuffer===null){if(this._inputBuffer.frameCount<this.overlapLength)return;this.midBuffer=new Float32Array(this.overlapLength*2),this._inputBuffer.receiveSamples(this.midBuffer,this.overlapLength)}while(this._inputBuffer.frameCount>=this.sampleReq){if(y=this.seekBestOverlapPosition(),this._outputBuffer.ensureAdditionalCapacity(this.overlapLength),this.overlap(Math.floor(y)),this._outputBuffer.put(this.overlapLength),H=this.seekWindowLength-2*this.overlapLength,H>0)this._outputBuffer.putBuffer(this._inputBuffer,y+this.overlapLength,H);let $=this._inputBuffer.startIndex+2*(y+this.seekWindowLength-this.overlapLength);this.midBuffer.set(this._inputBuffer.vector.subarray($,$+2*this.overlapLength)),this.skipFract+=this.nominalSkip,V=Math.floor(this.skipFract),this.skipFract-=V,this._inputBuffer.receive(V)}}}var P=function(y,H){return(y>H?y-H:H-y)>0.0000000001};class B{constructor(){this.transposer=new Q(!1),this.stretch=new N(!1),this._inputBuffer=new R,this._intermediateBuffer=new R,this._outputBuffer=new R,this._rate=0,this._tempo=0,this.virtualPitch=1,this.virtualRate=1,this.virtualTempo=1,this.calculateEffectiveRateAndTempo()}clear(){this.transposer.clear(),this.stretch.clear()}clone(){let y=new B;return y.rate=this.rate,y.tempo=this.tempo,y}get rate(){return this._rate}set rate(y){this.virtualRate=y,this.calculateEffectiveRateAndTempo()}set rateChange(y){this._rate=1+0.01*y}get tempo(){return this._tempo}set tempo(y){this.virtualTempo=y,this.calculateEffectiveRateAndTempo()}set tempoChange(y){this.tempo=1+0.01*y}set pitch(y){this.virtualPitch=y,this.calculateEffectiveRateAndTempo()}set pitchOctaves(y){this.pitch=Math.exp(0.69314718056*y),this.calculateEffectiveRateAndTempo()}set pitchSemitones(y){this.pitchOctaves=y/12}get inputBuffer(){return this._inputBuffer}get outputBuffer(){return this._outputBuffer}calculateEffectiveRateAndTempo(){let y=this._tempo,H=this._rate;if(this._tempo=this.virtualTempo/this.virtualPitch,this._rate=this.virtualRate*this.virtualPitch,P(this._tempo,y))this.stretch.tempo=this._tempo;if(P(this._rate,H))this.transposer.rate=this._rate;if(this._rate>1){if(this._outputBuffer!=this.transposer.outputBuffer)this.stretch.inputBuffer=this._inputBuffer,this.stretch.outputBuffer=this._intermediateBuffer,this.transposer.inputBuffer=this._intermediateBuffer,this.transposer.outputBuffer=this._outputBuffer}else if(this._outputBuffer!=this.stretch.outputBuffer)this.transposer.inputBuffer=this._inputBuffer,this.transposer.outputBuffer=this._intermediateBuffer,this.stretch.inputBuffer=this._intermediateBuffer,this.stretch.outputBuffer=this._outputBuffer}process(){if(this._rate>1)this.stretch.process(),this.transposer.process();else this.transposer.process(),this.stretch.process()}}class F{constructor(y){this.buffer=y,this._position=0}get dualChannel(){return this.buffer.numberOfChannels>1}get position(){return this._position}set position(y){this._position=y}extract(y,H=0,V=0){this.position=V;let $=this.buffer.getChannelData(0),G=this.dualChannel?this.buffer.getChannelData(1):this.buffer.getChannelData(0),J=0;for(;J<H;J++)y[J*2]=$[J+V],y[J*2+1]=G[J+V];return Math.min(H,$.length-V)}}var i=function(y,H,V=w,$=4096){let G=y.createScriptProcessor($,2,2),J=new Float32Array($*2);return G.onaudioprocess=(Y)=>{let j=Y.outputBuffer.getChannelData(0),C=Y.outputBuffer.getChannelData(1),q=H.extract(J,$);if(V(H.sourcePosition),q===0)H.onEnd();let D=0;for(;D<q;D++)j[D]=J[D*2],C[D]=J[D*2+1]},G},n=function(y,H,V){return V=V||"0",y=y+"",y.length>=H?y:new Array(H-y.length+1).join(V)+y},A=function(y){let H=Math.floor(y/60),V=y-H*60;return`${H}:${n(parseInt(V),2)}`},o=function(y){let H=this.timePlayed,V=this.sampleRate;if(this.sourcePosition=y,this.timePlayed=y/V,H!==this.timePlayed){let $=new CustomEvent("play",{detail:{timePlayed:this.timePlayed,formattedTimePlayed:this.formattedTimePlayed,percentagePlayed:this.percentagePlayed}});this._node.dispatchEvent($)}};class x{constructor(y,H,V,$=w){this._soundtouch=new B;let G=new F(H);this.timePlayed=0,this.sourcePosition=0,this._filter=new d(G,this._soundtouch,$),this._node=i(y,this._filter,(J)=>o.call(this,J),V),this.tempo=1,this.rate=1,this.duration=H.duration,this.sampleRate=y.sampleRate,this.listeners=[]}get formattedDuration(){return A(this.duration)}get formattedTimePlayed(){return A(this.timePlayed)}get percentagePlayed(){return 100*this._filter.sourcePosition/(this.duration*this.sampleRate)}set percentagePlayed(y){this._filter.sourcePosition=parseInt(y*this.duration*this.sampleRate),this.sourcePosition=this._filter.sourcePosition,this.timePlayed=this.sourcePosition/this.sampleRate}get node(){return this._node}set pitch(y){this._soundtouch.pitch=y}set pitchSemitones(y){this._soundtouch.pitchSemitones=y}set rate(y){this._soundtouch.rate=y}set tempo(y){this._soundtouch.tempo=y}connect(y){this._node.connect(y)}disconnect(){this._node.disconnect()}on(y,H){this.listeners.push({name:y,cb:H}),this._node.addEventListener(y,(V)=>H(V.detail))}off(y=null){let H=this.listeners;if(y)H=H.filter((V)=>V.name===y);H.forEach((V)=>{this._node.removeEventListener(V.name,($)=>V.cb($.detail))})}}var Z={log:(...y)=>{if(!X.debug)return;return console.log(`%c\u2726 chaimu.js v${X.version} \u2726`,"background: #000; color: #fff; padding: 0 8px",...y)}};var S=["playing","ratechange","play","waiting","pause","seeked"];function z(){let y=window.AudioContext||window.webkitAudioContext;return y?new y:void 0}class K{static name="BasePlayer";chaimu;_src;fetch;constructor(y,H){this.chaimu=y,this._src=H,this.fetch=X.fetchFn}async init(){return new Promise((y)=>{return y(this)})}clear(){return new Promise((y)=>{return y(this)})}lipSync(y=!1){return this}handleVideoEvent=(y)=>{return Z.log(`handle video ${y.type}`),this.lipSync(y.type),this};removeVideoEvents(){for(let y of S)this.chaimu.video.removeEventListener(y,this.handleVideoEvent);return this}addVideoEvents(){for(let y of S)this.chaimu.video.addEventListener(y,this.handleVideoEvent);return this}async play(){return new Promise((y)=>{return y(this)})}async pause(){return new Promise((y)=>{return y(this)})}get name(){return this.constructor.name}set src(y){this._src=y}get src(){return this._src}get currentSrc(){return this._src}set volume(y){return}get volume(){return 0}get playbackRate(){return 0}set playbackRate(y){return}get currentTime(){return 0}}class h extends K{static name="AudioPlayer";audio;gainNode;audioSource;constructor(y,H){super(y,H);this.audio=new Audio(H),this.audio.crossOrigin="anonymous"}initAudioBooster(){if(!this.chaimu.audioContext)return this;if(this.gainNode&&this.audioSource)this.audioSource.disconnect(this.gainNode),this.gainNode.disconnect();return this.gainNode=this.chaimu.audioContext.createGain(),this.gainNode.connect(this.chaimu.audioContext.destination),this.audioSource=this.chaimu.audioContext.createMediaElementSource(this.audio),this.audioSource.connect(this.gainNode),this}async init(){return new Promise((y)=>{return this.initAudioBooster(),y(this)})}audioErrorHandle=(y)=>{console.error("[AudioPlayer]",y)};lipSync(y=!1){if(Z.log("[AudioPlayer] lipsync video",this.chaimu.video),!this.chaimu.video)return this;if(this.audio.currentTime=this.chaimu.video.currentTime,this.audio.playbackRate=this.chaimu.video.playbackRate,!y)return Z.log("[AudioPlayer] lipsync mode isn't set"),this;switch(Z.log(`[AudioPlayer] lipsync mode is ${y}`),y){case"play":case"playing":case"seeked":{if(!this.chaimu.video.paused)this.syncPlay();return this}case"pause":case"waiting":return this.pause(),this;default:return this}}async clear(){return new Promise((y)=>{return this.audio.pause(),this.audio.src="",this.audio.removeAttribute("src"),y(this)})}syncPlay(){return Z.log("[AudioPlayer] sync play called"),this.audio.play().catch(this.audioErrorHandle),this}async play(){return Z.log("[AudioPlayer] play called"),await this.audio.play().catch(this.audioErrorHandle),this}async pause(){return new Promise((y)=>{return Z.log("[AudioPlayer] pause called"),this.audio.pause(),y(this)})}set src(y){this.audio.src=y}get src(){return this.audio.src}get currentSrc(){return this.audio.currentSrc}set volume(y){if(this.gainNode){this.gainNode.gain.value=y;return}this.audio.volume=y}get volume(){return this.gainNode?this.gainNode.gain.value:this.audio.volume}get playbackRate(){return this.audio.playbackRate}set playbackRate(y){this.audio.playbackRate=y}get currentTime(){return this.audio.currentTime}}class k extends K{static name="ChaimuPlayer";audioBuffer;sourceNode;gainNode;audioShifter;cleanerRunned=!1;async fetchAudio(){if(!this._src)throw new Error("No audio source provided");if(!this.chaimu.audioContext)throw new Error("No audio context available");Z.log(`[ChaimuPlayer] Fetching audio from ${this._src}...`);try{let y=await this.fetch(this._src);Z.log("[ChaimuPlayer] Decoding fetched audio...");let H=await y.arrayBuffer();this.audioBuffer=await this.chaimu.audioContext.decodeAudioData(H)}catch(y){throw new Error(`Failed to fetch audio file, because ${y.message}`)}return this}initAudioBooster(){if(!this.chaimu.audioContext)return this;if(this.gainNode)this.gainNode.disconnect();return this.gainNode=this.chaimu.audioContext.createGain(),this}async init(){return await this.fetchAudio(),this.initAudioBooster(),this}lipSync(y=!1){if(Z.log("[ChaimuPlayer] lipsync video",this.chaimu.video,this),!this.chaimu.video)return this;if(!y)return Z.log("[ChaimuPlayer] lipsync mode isn't set"),this;switch(Z.log(`[ChaimuPlayer] lipsync mode is ${y}`),y){case"play":case"playing":case"ratechange":case"seeked":{if(!this.chaimu.video.paused)this.start();return this}case"pause":case"waiting":return this.pause(),this;default:return this}}async reopenCtx(){if(!this.chaimu.audioContext)throw new Error("No audio context available");try{await this.chaimu.audioContext.close()}catch{}return this}async clear(){if(!this.chaimu.audioContext)throw new Error("No audio context available");if(Z.log("clear audio context"),this.cleanerRunned=!0,await this.pause(),!this.gainNode)return this.cleanerRunned=!1,this;if(this.sourceNode)this.sourceNode.stop(),this.sourceNode.disconnect(this.gainNode),this.sourceNode=void 0;if(this.audioShifter)this.audioShifter._node.disconnect(this.gainNode),this.audioShifter=void 0;this.gainNode.disconnect();let y=this.volume;return this.gainNode=void 0,await this.reopenCtx(),this.chaimu.audioContext=z(),this.initAudioBooster(),this.volume=y,this.cleanerRunned=!1,this}async start(){if(!this.chaimu.audioContext)throw new Error("No audio context available");if(!this.audioBuffer)throw new Error("The player isn't initialized");if(!this.gainNode||this.audioShifter&&this.audioShifter.duration<this.chaimu.video.currentTime)return Z.log("Skip starting player"),this;if(this.cleanerRunned)return Z.log("The other cleaner is still running, waiting..."),this;return Z.log("starting audio"),await this.clear(),await this.play(),this.audioShifter=new x(this.chaimu.audioContext,this.audioBuffer,1024),this.audioShifter.tempo=this.chaimu.video.playbackRate,this.audioShifter.percentagePlayed=this.chaimu.video.currentTime/this.audioShifter.duration,this.sourceNode=this.chaimu.audioContext.createBufferSource(),this.sourceNode.buffer=null,this.sourceNode.connect(this.gainNode),this.audioShifter.connect(this.gainNode),this.gainNode.connect(this.chaimu.audioContext.destination),this.sourceNode.start(void 0,this.chaimu.video.currentTime),this}async pause(){if(!this.chaimu.audioContext)throw new Error("No audio context available");if(this.chaimu.audioContext.state!=="running")return this;return await this.chaimu.audioContext.suspend(),this}async play(){if(!this.chaimu.audioContext)throw new Error("No audio context available");return await this.chaimu.audioContext.resume(),this}set src(y){this._src=y}get src(){return this._src}get currentSrc(){return this._src}set volume(y){if(this.gainNode)this.gainNode.gain.value=y}get volume(){return this.gainNode?this.gainNode.gain.value:0}set playbackRate(y){if(!this.audioShifter)throw new Error("No audio source available");this.audioShifter.pitch=y}get playbackRate(){return this.audioShifter?._soundtouch?.tempo??0}get currentTime(){return this.chaimu.video.currentTime}}class M{_debug=!1;audioContext;player;video;constructor({url:y,video:H,debug:V=!1,fetchFn:$=X.fetchFn,preferAudio:G=!1}){this._debug=X.debug=V,X.fetchFn=$,this.audioContext=z(),this.player=this.audioContext&&!G?new k(this,y):new h(this,y),this.video=H}async init(){if(await this.player.init(),this.video&&!this.video.paused)this.player.lipSync("play");this.player.addVideoEvents()}set debug(y){this._debug=X.debug=y}get debug(){return this._debug}}var r={};export{z as initAudioContext,M as default,r as ChaimuType,k as ChaimuPlayer,K as BasePlayer,h as AudioPlayer};
